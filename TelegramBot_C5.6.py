
import telebot
from extensions import keys, CryptoConverter, APIException
from TOKEN import TOKEN
from telebot import types

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start','help','info'])
def help(message: telebot.types.Message):
    text = f"–ü—Ä–∏–≤–µ—Ç {message.from_user.username}\n" \
           f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –≤–≤–æ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n " \
           "<–∏–º—è –≤–∞–ª—é—Ç—ã>" \
           "<–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>" \
           "<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã>\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä:\n" \
           "–±–∏—Ç–∫–æ–∏–Ω –¥–æ–ª–ª–∞—Ä 100"
    bot.reply_to(message, text)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    Help = types.KeyboardButton(" üÜò –ü–æ–º–æ—â—å")
    Values = types.KeyboardButton("üíµüí¥üí∂üí∑ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã")
    markup.add(Help, Values)
    bot.send_message(message.chat.id, "–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏", reply_markup=markup)

@bot.message_handler (commands = ['values'])
def values(message: telebot.types.Message):
    text = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:"
    for key in keys.keys():
        text = "\n".join((text, key, ))
    bot.reply_to(message, text)

@bot.message_handler (content_types = ['text', ])
def convert(message: telebot.types.Message):
    if message.text == "üíµüí¥üí∂üí∑ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã":
        text = "–°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç:"
        for key in keys.keys():
            text = "\n".join((text, key,))
        bot.reply_to(message, text)
    elif message.text == "üÜò –ü–æ–º–æ—â—å":
        text = "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –≤–≤–æ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n " \
           "<–∏–º—è –≤–∞–ª—é—Ç—ã>" \
           "<–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>" \
           "<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã>\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä:\n" \
           "–±–∏—Ç–∫–æ–∏–Ω –¥–æ–ª–ª–∞—Ä 100"
        bot.reply_to(message, text)
    else:
        try:
            values = message.text.split(" ")

            if len(values) != 3:
                raise APIException("–ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç—Ä–∏!!!\n –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–Ω–æ–ø–æ—á–µ–∫ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /info")

            quote, base, amount = values
            total_base = CryptoConverter.get_price(quote, base, amount)
        except APIException as e:
            bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{e}\n –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–Ω–æ–ø–æ—á–µ–∫ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /info')
        except Exception as e:
            bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}\n –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–Ω–æ–ø–æ—á–µ–∫ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /info')
        else:
            text = f'–¶–µ–Ω–∞ {amount} {quote} {keys[quote]} –≤ {base} —Å–æ—Å—Ç–∞–≤–∏—Ç {total_base} {keys[base]}'
            bot.send_message(message.chat.id, text)

bot.polling(none_stop = True)
